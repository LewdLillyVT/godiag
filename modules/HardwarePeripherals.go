package modules

import (
	"bytes"
	"fmt"
	"os"
	"os/exec"
	"path/filepath"
)

// GenerateHardwareReport gathers various hardware and peripheral-related information and saves it to a text file.
func GenerateHardwareReport(outputDir string) error {
	var output bytes.Buffer
	outputPath := filepath.Join(outputDir, "Hardware_Peripherals_Report.txt")

	// --- 1. Connected USB Devices ---
	output.WriteString("--- Connected USB Devices ---\n\n")
	// Using wmic to get USB device captions and device IDs
	usbDevices, err := exec.Command("wmic", "path", "Win32_PnPEntity", "where", "PNPClass='USB'", "get", "Caption,DeviceID", "/format:list").Output()
	if err != nil {
		output.WriteString("Error gathering USB device information: " + err.Error() + "\n\n")
	} else {
		output.Write(usbDevices)
	}
	output.WriteString("\n\n")

	// --- 2. Printer Information ---
	output.WriteString("--- Printer Information ---\n\n")
	// Using wmic to get printer details
	printers, err := exec.Command("wmic", "printer", "get", "Name,PortName,DriverName,PrinterStatus,Shared", "/format:list").Output()
	if err != nil {
		output.WriteString("Error gathering printer information: " + err.Error() + "\n\n")
	} else {
		output.Write(printers)
	}
	output.WriteString("\n\n")

	// --- 3. Battery Health (for Laptops) ---
	output.WriteString("--- Battery Health Information ---\n\n")
	// Using wmic to get battery details. This command will only return data on devices with a battery.
	batteryInfo, err := exec.Command("wmic", "path", "Win32_Battery", "get", "DesignCapacity,FullChargeCapacity,EstimatedChargeRemaining,BatteryStatus", "/format:list").Output()
	if err != nil {
		// If there's an error (e.g., no battery found), print a more informative message.
		output.WriteString(fmt.Sprintf("Error gathering battery information (may not apply to desktop PCs): %v\n\n", err.Error()))
	} else if len(bytes.TrimSpace(batteryInfo)) == 0 {
		// If command ran but returned no data (e.g., on a desktop)
		output.WriteString("No battery information found (this is common for desktop computers).\n\n")
	} else {
		output.Write(batteryInfo)
	}
	output.WriteString("\n\n")

	// --- Footer ---
	output.WriteString("\n\nReport generated by GoDiag. Learn more at https://github.com/LewdLillyVT/godiag")

	// Save to file
	return os.WriteFile(outputPath, output.Bytes(), 0644)
}
