package modules

import (
	"bytes"
	"os"
	"os/exec"
	"path/filepath"
)

// GenerateDriverReport gathers information about installed drivers and saves it to a text file.
func GenerateDriverReport(outputDir string) error {
	var output bytes.Buffer
	outputPath := filepath.Join(outputDir, "Driver_Report.txt")

	// --- 1. List All Installed Drivers with Details ---
	output.WriteString("--- All Installed Drivers and Details ---\n\n")
	// Using 'driverquery /FO LIST /v' to get verbose driver information in a list format.
	// This typically includes:
	//   Module Name
	//   Display Name
	//   Description
	//   Product Type
	//   Service Type
	//   Running State
	//   Start Mode
	//   Status
	//   Accept Stop
	//   Accept Pause
	//   Paged Pool(Bytes)
	//   Code(Bytes)
	//   BSS(Bytes)
	//   Link Date (closest to install date available via this command)
	//   Path
	//   Init (Bytes)
	//   Version
	//   Company
	driverInfo, err := exec.Command("driverquery", "/FO", "LIST", "/v").Output()
	if err != nil {
		output.WriteString("Error gathering driver information: " + err.Error() + "\n\n")
	} else {
		output.Write(driverInfo)
	}
	output.WriteString("\n\n")

	// --- Footer ---
	output.WriteString("\n\nReport generated by GoDiag. Learn more at https://github.com/LewdLillyVT/godiag")

	// Save to file
	return os.WriteFile(outputPath, output.Bytes(), 0644)
}
